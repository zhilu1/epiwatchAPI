{"version":3,"sources":["dataDisplay/ReportList.js","dataDisplay/ExpandList.js","dataDisplay/EventTable.js","charts/GeneralChart.js","charts/ReportChart.js","dataDisplay/ReportCard.js","dataDisplay/eventCard.js","dataDisplay/GoogleNewsCard.js","dataDisplay/DataDisplay.js","charts/Chart.js","map/DataMap.js","charts/ChartByDates.js","others/errSnack.js","others/TipPopper.js","others/processer.js","MainPage.js","App.js","router.js","serviceWorker.js","index.js"],"names":["ReportList","state","disease_open","syndrome_open","handleSyndromeClick","_this","setState","handleDiseaseClick","_step","_this$props","this","props","classes","disease","syndrome_items","_iterator","_createForOfIteratorHelper","syndrome","s","n","done","value","push","react_default","a","createElement","ListItem_default","key","ListItemText_default","primary","err","e","f","_step2","disease_items","_iterator2","List_default","component","subheader","className","root","listSection","ul","ListSubheader_default","React","Component","withStyles","theme","width","marginTop","spacing","unit","marginRight","position","overflow","maxWidth","backgroundColor","palette","background","paper","padding","nested","ExpandList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleExpand","expand","addList","items","result","ExpandList_createForOfIteratorHelper","item","toString","disableGutters","bind","assertThisInitialized","list","disablePadding","dense","flexContainer","slice","length","IconButton_default","onClick","ExpandLess_default","ExpandMore_default","display","flexDirection","CustomTableCell","head","common","black","color","white","body","fontSize","TableCell","EventTable","rows","events","map","row","start_yearMonth","date","split","replace","start_datetime","moment","format","Paper_default","Table_default","table","TableHead_default","TableRow_default","TableBody_default","type","scope","align","number_affected","dataDisplay_ExpandList","location","country","concat","overflowX","&:nth-of-type(odd)","default","GeneralChart","handleChange","event","chartType","target","renderChart","datas","react_chartjs_2_es","data","options","title","displayTitle","text","property","fontSixe","legend","displayLegend","chartData","Card_default","card","InputLabel_default","htmlFor","Select_default","onChange","input","FilledInput_default","name","id","MenuItem_default","defaultProps","legendPosition","media","height","paddingTop","actions","ReportChart","report","types","Map","ReportChart_createForOfIteratorHelper","reported_events","set","labels","toConsumableArray","keys","datasets","label","values","charts_GeneralChart","ReportCard","showChart","handleShowChart","handleClose","CardContent_default","content","dataDisplay_ReportList","comment","dataDisplay_EventTable","CardActions_default","disableActionSpacing","Button_default","size","button","aria-label","InsertChart_default","leftIcon","Modal_default","open","onClose","charts_ReportChart","orange","pos","marginBottom","flexGrow","inlineItem","textAlign","boxShadow","shadows","outline","top","left","transform","EventCard","expanded","handleExpandClick","redirectToDatasource","window","url","_this2","DataSourceUrl","reports","counter","eventCard_createForOfIteratorHelper","dataDisplay_ReportCard","CardHeader_default","headline","date_of_publication","Typography_default","Link_default","classnames","iconSmall","defineProperty","expandOpen","aria-expanded","Collapse_default","in","timeout","unmountOnExit","paragraph","main_text","wdith","marginLeft","transition","transitions","create","duration","shortest","avatar","red","margin","rightIcon","publishedAt","description","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","disabled","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","TablePaginationActionsWrapped","flexShrink","secondary","withTheme","createData","DisplayTable","handleChangePage","handleChangeRowsPerPage","_this3","_this$state","emptyRows","min","tableWrapper","TableCell_default","dataSource","GoogleNewsCard","eventCard","style","colSpan","TableFooter_default","TablePagination_default","rowsPerPageOptions","SelectProps","native","onChangeRowsPerPage","ActionsComponent","Chart","articles","Chart_createForOfIteratorHelper","_step3","_iterator3","plugins","datalabels","context","dataset","dataIndex","font","weight","formatter","round","scales","xAxes","stacked","yAxes","mapStyles","Geocode","setApiKey","enableDebug","MapContainer","_Component","_getPrototypeOf2","_len","arguments","args","Array","_key","apply","showingInfoWindow","activeMarker","selectedPlace","locations","onMarkerClick","marker","addMarker","_i","_keys","loc","dist","death","infected","hospitalised","recovered","inherits","createClass","locob","DataMap_createForOfIteratorHelper","_step4","_iterator4","event_loc","type_object","_step5","_iterator5","assign","allpromises","Promise","resolve","loc_keys","_loop","_loc_keys","_i2","JSON","parse","localStorage","getItem","console","log","setcomplete_promise","fromAddress","then","response","_response$results$0$g","results","geometry","lat","lng","setItem","stringify","error","all","markers","index_es","google","zoom","visible","GoogleApiWrapper","apiKey","LoadingContainer","ChartByDates","toRGB","string","hash","i","charCodeAt","rgb","dates","ChartByDates_createForOfIteratorHelper","article","dateTime","hasOwnProperty","borderColor","elements","line","fill","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","green","dark","amber","icon","iconVariant","opacity","message","alignItems","variant","other","objectWithoutProperties","Icon","SnackbarContent_default","classNames","aria-describedby","action","close","Close_default","CustomizedSnackbars","reason","clearErrMsg","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","arrowGenerator","&[x-placement*=\"bottom\"] $arrow","&::before","borderWidth","&[x-placement*=\"top\"] $arrow","bottom","&[x-placement*=\"right\"] $arrow","&[x-placement*=\"left\"] $arrow","right","TipPopper","arrowRef","handleArrowRef","node","Tooltip_default","Fragment","arrow","ref","tooltip","lightTooltip","popper","lightPop","tooltipPlacementLeft","bootstrapPlacementLeft","tooltipPlacementRight","bootstrapPlacementRight","tooltipPlacementTop","bootstrapPlacementTop","tooltipPlacementBottom","bootstrapPlacementBottom","PopperProps","popperOptions","modifiers","enabled","Boolean","element","placement","children","arrowPopper","grey","borderStyle","bootstrapPopper","bootstrapTooltip","htmlPopper","htmlTooltip","typography","pxToRem","border","& b","fontWeight","fontWeightMedium","LinearProgress_default","disableShrink","TabContainer","MainPage","togglehelper","helperMode","errorMsg","scrollToMyRef","scrollTo","refToData","current","offsetTop","getData","getGoogleNews","keyBox","loading","searchInEpiWatch","searchOnGoogleNews","AddKeyterm","createRef","onKeyPress","keyCode","googleNews","document","getElementById","key_term","start_date","end_date","start_moment","end_moment","isValid","preventDefault","isSameOrBefore","innerText","req","Request","fetch","ok","Error","statusText","json","catch","query","subtract","which","tag","innerHTML","setAttribute","appendChild","reload","MainPage_createForOfIteratorHelper","sort","b","processer","others_TipPopper","bar","AppBar_default","Tabs_default","Tab_default","onSubmit","TextField_default","InputLabelProps","floatingLabelFocusStyle","cssLabel","focused","cssFocused","InputProps","cssOutlinedInput","notchedOutline","multilineColor","textField","onKeyDown","placeholder","helperText","Reset","react_splitter_layout_lib_default","percentage","charts_Chart","charts_ChartByDates","DataMap","DataDisplay","react_scroll_up_button_default","ContainerClassName","TransitionClassName","errSnack","dataBlock","&$cssFocused","&$cssFocused $notchedOutline","App","src_MainPage","Routers","es","history","hashHistory","path","hostname","match","ReactDOM","render","router","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ea05b08.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit,\n        position: 'relative',\n        overflow: 'auto',\n        maxWidth: 200,\n        backgroundColor: theme.palette.background.paper,\n    },\n    listSection: {\n        backgroundColor: 'inherit',\n    },\n    ul: {\n        backgroundColor: 'inherit',\n        padding: 0,\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n});\n\nclass ReportList extends React.Component {\n    state = {\n        disease_open: false,\n        syndrome_open: false,\n    };\n\n    handleSyndromeClick = () => {\n        this.setState(state => ({ syndrome_open: !state.syndrome_open }));\n    };\n    handleDiseaseClick = () => {\n        this.setState(state => ({ disease_open: !state.disease_open }));\n    };\n\n    render() {\n        const { classes, disease, syndrome } = this.props;\n        const syndrome_items = []\n        for (const value of syndrome) {\n            syndrome_items.push(\n                <ListItem key={value}>\n                    <ListItemText primary={value} />\n                </ListItem>\n            )\n        }\n        const disease_items = []\n        for (const value of disease) {\n            disease_items.push(\n                <ListItem key={value}>\n                    <ListItemText primary={value} />\n                </ListItem>\n            )\n        }\n        return (\n\n            <List\n                component=\"nav\"\n                subheader={<li />}\n                className={classes.root}\n            >\n                <li key={`section-disease`} className={classes.listSection}>\n                    <ul className={classes.ul}>\n                        <ListSubheader> Diseases </ListSubheader>\n                        {disease_items}\n                    </ul>\n                </li>\n                <li key={`section-syndrome`} className={classes.listSection}>\n                    <ul className={classes.ul}>\n                        <ListSubheader>Syndrome</ListSubheader>\n                        {syndrome_items}\n                    </ul>\n                </li>\n            </List>\n\n\n        );\n    }\n}\n\nReportList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ReportList);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n    },\n    flexContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    item: {\n        maxWidth: 10\n    }\n});\n\n\nclass ExpandList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            expand: false,\n        }\n        this.handleExpand = this.handleExpand.bind(this);\n        this.addList = this.addList.bind(this);\n    }\n\n    handleExpand = () => {\n        this.setState({\n            expand: !this.state.expand\n        });\n    }\n\n    addList = (items) => {\n        let result = [];\n        for (const item of items) {\n            result.push(<ListItem key={item.toString()} className={this.props.item} disableGutters>\n                <ListItemText primary={item} />\n            </ListItem>)\n        }\n\n        return result\n    }\n\n    render() {\n        const { classes } = this.props;\n        let items = this.props.list;\n        return (\n            <div className={classes.root}>\n                <List disablePadding dense component=\"nav\" className={classes.flexContainer}>\n                    {this.addList(items.slice(0, 3))}\n                    {items.length > 3 ?\n                        <IconButton onClick={this.handleExpand}>\n                            {this.state.expand ?\n                                this.addList(items.slice(3)) : null}\n                            {this.state.expand ? <ExpandLess /> : <ExpandMore />}\n                        </IconButton>\n                        : null\n                    }\n\n                </List>\n                {/* <List component=\"nav\">\n                        <ListItem>\n                            <ListItemText primary=\"Trash\" />\n                        </ListItem>\n                    </List> */}\n            </div>\n        );\n    }\n}\n\nExpandList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ExpandList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandList from './ExpandList';\nimport moment from 'moment';\n\nconst CustomTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst styles = theme => ({\n    root: {\n        // width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n    },\n    row: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n});\n\n// let id = 0;\n// function createData(name, calories, fat, carbs, protein) {\n//     id += 1;\n//     return { id, name, calories, fat, carbs, protein };\n// }\n\n\nclass EventTable extends Component {\n\n\n\n    // initializeEvents = (events) => {\n    //     let array = [];\n    //     let index = 0\n    //     for (const event of events) {\n    //         event.index = index;\n    //         array.push(event);\n    //         index++;\n    //     }\n    //     return array\n    // }\n\n\n    // addList = (items) => {\n    //     let result = []\n    //     for (const item of items) {\n    //         result.push(<ListItem>\n    //             <ListItemText inset primary={item} />\n    //         </ListItem>)\n    //     }\n    //     return result\n    // }\n\n    render() {\n        const { classes } = this.props;\n        const rows = this.props.events;\n        rows.map(row => {\n            // let datetime = row.date\n            let dates = row.date.split(\" to \")\n            let start_yearMonth = dates[0].split(\"T\")[0].replace(/-xx/, '')\n            // let end_yearMonth = dates[1].split(\"T\")[0].replace(/-xx/, '')\n            start_yearMonth = start_yearMonth.replace(/-00/, '-01')\n            // end_yearMonth = end_yearMonth.replace(/-00/, '-01')\n            let start_datetime = moment(start_yearMonth, \"YYYY-MM\")\n            // let end_datetime = moment(end_yearMonth, \"YYYY-MM\")\n            // row.date = start_datetime.format(\"YYYY MMMM\") + \"  to  \" + end_datetime.format(\"YYYY MMMM\")\n            row.date = start_datetime.format(\"YYYY MMMM\")\n            return row\n        })\n        return (\n            <Paper className={classes.root}>\n                <Table className={classes.table} padding='dense'>\n                    <TableHead>\n                        <TableRow>\n                            <CustomTableCell>event type</CustomTableCell>\n                            <CustomTableCell>date</CustomTableCell>\n                            <CustomTableCell>number affected</CustomTableCell>\n                            <CustomTableCell>regions</CustomTableCell>\n                            {/* <CustomTableCell align=\"right\">locations</CustomTableCell> */}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map(row => {\n                            return (\n                                <TableRow className={classes.row} key={row.type}>\n                                    <CustomTableCell component=\"th\" scope=\"row\">\n                                        {row.type}\n                                    </CustomTableCell>\n                                    <CustomTableCell align=\"right\">{row.date}</CustomTableCell>\n                                    <CustomTableCell align=\"right\">{row.number_affected}</CustomTableCell>\n                                    {/* <CustomTableCell align=\"right\">{row.location[0].country}</CustomTableCell> */}\n                                    <CustomTableCell>\n                                        <ExpandList list={row.location[0].country.concat(row.location[0].location)} />\n\n                                    </CustomTableCell>\n                                    {/* <CustomTableCell>\n                                        <ExpandList list={row.location[0].location} />\n\n                                    </CustomTableCell> */}\n\n                                </TableRow>\n\n                            )\n                        })}\n                    </TableBody>\n\n                </Table>\n            </Paper>\n        );\n    }\n}\n\n\nEventTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(EventTable);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Bar, Pie, Line, Doughnut, Radar } from 'react-chartjs-2';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Card from '@material-ui/core/Card';\n\nconst styles = theme => ({\n    card: {\n        // width: \"40%\",\n        // minWidth: 1000,\n        // maxHeight: 600,\n        // display: 'flex',\n\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    actions: {\n        display: 'flex',\n    },\n});\n\n\nclass GeneralChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chartData: props.data,\n            chartType: \"Bar\"\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.renderChart = this.renderChart.bind(this);\n\n    }\n\n    static defaultProps = {\n        displayTitle: true,\n        displayLegend: true,\n        legendPosition: 'right',\n        property: 'Kind'\n    }\n\n    handleChange = event => {\n        this.setState({ chartType: event.target.value });\n    };\n\n    renderChart = (datas) => {\n        const type = this.state.chartType\n        if (type === \"Bar\") {\n            return (<Bar\n                data={datas}\n                options={{\n                    title: {\n                        display: this.props.displayTitle,\n                        text: 'Distibution Bar Graph By ' + this.props.property,\n                        fontSixe: 25\n\n                    },\n                    legend: {\n                        display: this.props.displayLegend,\n                        position: \"right\"\n                    }\n                }}\n\n            />)\n        }\n        else if (type === \"Pie\") {\n            return (<Pie\n                data={datas}\n                options={{\n                    title: {\n                        display: this.props.displayTitle,\n                        text: 'Distibution Pie Graph By ' + this.props.property,\n                        fontSixe: 25\n\n                    },\n                    legend: {\n                        display: this.props.displayLegend,\n                        position: \"right\"\n                    }\n                }}\n\n            />)\n        }\n        else if (type === \"Line\") {\n            return (<Line\n                data={datas}\n                options={{\n                    title: {\n                        display: this.props.displayTitle,\n                        text: 'Distibution Line Graph By ' + this.props.property,\n                        fontSixe: 25\n\n                    },\n                    legend: {\n                        display: this.props.displayLegend,\n                        position: \"right\"\n                    }\n                }}\n\n            />)\n        }\n        else if (type === \"Doughnut\") {\n            return (<Doughnut\n                data={datas}\n                options={{\n                    title: {\n                        display: this.props.displayTitle,\n                        text: 'Distibution Doughnut Graph By ' + this.props.property,\n                        fontSixe: 25\n\n                    },\n                    legend: {\n                        display: this.props.displayLegend,\n                        position: \"right\"\n                    }\n                }}\n\n            />)\n        }\n        else if (type === \"Radar\") {\n            return (<Radar\n                data={datas}\n                options={{\n                    title: {\n                        display: this.props.displayTitle,\n                        text: 'Distibution Radar Graph By ' + this.props.property,\n                        fontSixe: 25\n\n                    },\n                    legend: {\n                        display: this.props.displayLegend,\n                        position: \"right\"\n                    }\n                }}\n\n            />)\n        }\n\n\n    }\n\n    render() {\n\n        const { classes } = this.props;\n        return (\n\n            // <div className=\"chart\">\n            // {/* //By changing the top it displays different type of graph */ }\n            < Card className={classes.card} >\n\n                <InputLabel htmlFor=\"filled-age-simple\">Graph Type</InputLabel>\n                <Select\n                    value={this.state.chartType}\n                    onChange={this.handleChange}\n                    input={<FilledInput name=\"chartType\" id=\"filled-chartType-simple\" />}\n                >\n                    <MenuItem value={\"Bar\"}>Bar</MenuItem>\n                    <MenuItem value={\"Pie\"}>Pie</MenuItem>\n                    <MenuItem value={\"Line\"}>Line</MenuItem>\n                    <MenuItem value={\"Doughnut\"}>Doughnut</MenuItem>\n                    <MenuItem value={\"Radar\"}>Radar</MenuItem>\n                </Select>\n                {this.renderChart(this.state.chartData)}\n            </Card >\n\n\n            // </div>\n\n        )\n    }\n}\n\nGeneralChart.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(GeneralChart);\n","import React, { Component } from 'react';\nimport GeneralChart from './GeneralChart'\n\n\nclass ReportChart extends Component {\n\n    render() {\n        const report = this.props.report\n        let types = new Map()\n        // for all reports in articles\n        for (let event of report.reported_events) {\n            types.set(event.type, event.number_affected)\n        }\n        let keys = [...types.keys()];\n        let values = [...types.values()];\n\n        const datas = {\n            labels: keys,\n            datasets: [\n                {\n                    label: 'Number of People',\n                    data: values,\n                    backgroundColor: [\n                        'rgba(255,99,132,0.6)',\n                        'rgba(54,162,235,0.6)',\n                        'rgba(0,0,0,0.6)',\n                        'rgba(162,54,222,0.6)',\n                        'rgba(110,255,104,0.6)',\n                        'rgba(15,22,14,0.6)',\n                        'rgba(32,233,233,0.6)',\n                        'rgba(233,233,233,0.6)',\n\n                    ]\n                }\n            ]\n        }\n        return (\n\n            <GeneralChart data={datas} property=\"Disease Type\" ></GeneralChart>\n\n        )\n    }\n}\n\nexport default ReportChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport orange from '@material-ui/core/colors/orange';\nimport ReportList from './ReportList';\nimport EventTable from './EventTable';\nimport InsertChartIcon from '@material-ui/icons/InsertChart';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport ReportChart from '../charts/ReportChart'\nimport Modal from '@material-ui/core/Modal';\n\nconst styles = theme => ({\n    card: {\n        // minWidth: 275,\n        // wdith: '100%',\n        backgroundColor: orange[500],\n    },\n    actions: {\n        display: 'flex',\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    content: {\n        display: 'flex',\n        flexGrow: 1,\n    },\n    inlineItem: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    paper: {\n        position: 'absolute',\n        // width: theme.spacing.unit * 50,\n        width: '75%',\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n    },\n\n});\n\nclass ReportCard extends React.Component {\n    state = {\n        showChart: false,\n    };\n\n    handleShowChart = () => {\n        this.setState(state => ({ showChart: !state.showChart }));\n    };\n\n    handleClose = () => {\n        this.setState({ showChart: false });\n    };\n\n    render() {\n        const { classes, report } = this.props;\n\n        return (\n            <Card className={classes.card} >\n                <CardContent className={classes.content} >\n                    <ReportList disease={report.disease} syndrome={report.syndrome} comment={report.comment} />\n                    <EventTable events={report.reported_events} />\n                    {/* <Grid container spacing={24}>\n                        <Grid item xs={4}>\n                            <ReportList className={classes.inlineItem} disease={report.disease} syndrome={report.syndrome} comment={report.comment} />\n                        </Grid>\n                        <Grid item xs={8}>\n                            <EventTable className={classes.inlineItem} events={report.reported_events} />\n                        </Grid>\n                    </Grid> */}\n                </CardContent>\n                <CardActions className={classes.actions} disableActionSpacing>\n                    <Button\n                        size=\"small\" className={classes.button}\n                        aria-label=\"display Charts of card\"\n                        onClick={this.handleShowChart} >\n                        <InsertChartIcon className={classes.leftIcon} />\n                        charts\n                    </Button>\n                    <Modal open={this.state.showChart} onClose={this.handleClose}>\n                        <div className={classes.paper}>\n                            <ReportChart report={report}></ReportChart>\n                        </div>\n                    </Modal>\n                </CardActions>\n            </Card >\n        );\n    }\n}\n\nReportCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ReportCard);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport LinkIcon from '@material-ui/icons/Link';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ReportCard from './ReportCard';\n\nconst styles = theme => ({\n    card: {\n        wdith: '100%'\n        // display: 'flex',// maxWidth: 400,\n    },\n    // media: {\n    //     height: 0,\n    //     paddingTop: '56.25%', // 16:9\n    // },\n    actions: {\n        display: 'flex',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n    button: {\n        margin: theme.spacing.unit,\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n    iconSmall: {\n        fontSize: 20,\n    },\n});\n\nclass EventCard extends React.Component {\n    state = { expanded: false };\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n    redirectToDatasource = () => {\n        window.open(this.props.report.url, \"_blank\")\n    }\n    render() {\n        const { classes, report } = this.props;\n        const DataSourceUrl = report.url\n        const reports = []\n        let counter = 0\n        for (const value of report.reports) {\n            counter++;\n            reports.push(<ReportCard report={value} key={counter} />);\n        }\n        return (\n            <Card className={classes.card}>\n                <CardHeader\n\n                    title={report.headline}\n                    subheader={report.date_of_publication}\n                />\n                <CardContent>\n                    <Typography component=\"div\">\n                        {reports}\n                    </Typography>\n                </CardContent>\n\n                <CardActions className={classes.actions} disableActionSpacing>\n                    <Button\n                        size=\"small\" className={classes.button}\n                        // variant=\"contained\" color=\"secondary\" className={classes.button}\n                        aria-label=\"Link to datasource\"\n                        onClick={() => this.redirectToDatasource(DataSourceUrl)}>\n                        datasource\n                    <LinkIcon className={classnames(classes.leftIcon, classes.iconSmall)} />\n                    </Button>\n                    <Button\n                        className={classnames(classes.expand, {\n                            [classes.expandOpen]: this.state.expanded,\n                        })}\n                        onClick={this.handleExpandClick}\n                        aria-expanded={this.state.expanded}\n                        aria-label=\"Show more\"\n                    >\n                        Show Content\n                        <ExpandMoreIcon className={classnames(classes.leftIcon, classes.iconSmall)} />\n                    </Button>\n                </CardActions>\n                <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                        <Typography paragraph>\n                            {report.main_text}\n                        </Typography>\n\n                    </CardContent>\n                </Collapse>\n            </Card>\n        );\n    }\n}\n\nEventCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(EventCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport LinkIcon from '@material-ui/icons/Link';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst styles = theme => ({\n    // card: {\n    //     maxWidth: 400,\n    // },\n    // media: {\n    //     height: 0,\n    //     paddingTop: '56.25%', // 16:9\n    // },\n    actions: {\n        display: 'flex',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n});\n\nclass EventCard extends React.Component {\n    state = { expanded: false };\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n    redirectToDatasource = () => {\n        window.open(this.props.report.url, \"_blank\")\n    }\n    render() {\n        const { classes, report } = this.props;\n        const DataSourceUrl = report.url\n        // const reports = []\n        // for (const value of report.reports) {\n        //     reports.push(<ReportCard report={value} />)\n        // }\n        return (\n            <Card className={classes.card}>\n                <CardHeader\n\n                    title={report.title}\n                    subheader={report.publishedAt}\n                />\n                <CardContent>\n                    <Typography paragraph>\n                        {report.description}\n                    </Typography>\n                </CardContent>\n                <CardActions className={classes.actions} disableActionSpacing>\n                    <Button\n                        size=\"small\" className={classes.button}\n                        // variant=\"contained\" color=\"secondary\" className={classes.button}\n                        aria-label=\"Link to datasource\"\n                        onClick={() => this.redirectToDatasource(DataSourceUrl)}>\n                        datasource\n                    <LinkIcon className={classnames(classes.leftIcon, classes.iconSmall)} />\n                    </Button>\n                    <Button\n                        className={classnames(classes.expand, {\n                            [classes.expandOpen]: this.state.expanded,\n                        })}\n                        onClick={this.handleExpandClick}\n                        aria-expanded={this.state.expanded}\n                        aria-label=\"Show more\"\n                    >\n                        Show Content\n                        <ExpandMoreIcon className={classnames(classes.leftIcon, classes.iconSmall)} />\n                    </Button>\n                </CardActions>\n\n                <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n\n                        <Typography paragraph>\n                            {report.content}\n                        </Typography>\n\n                    </CardContent>\n                </Collapse>\n            </Card>\n        );\n    }\n}\n\nEventCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(EventCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport EventCard from './eventCard';\nimport GoogleNewsCard from './GoogleNewsCard';\n\nconst actionsStyles = theme => ({\n    root: {\n        flexShrink: 0,\n        color: theme.palette.text.secondary,\n        marginLeft: theme.spacing.unit * 2.5,\n    },\n});\n\nclass TablePaginationActions extends React.Component {\n    handleFirstPageButtonClick = event => {\n        this.props.onChangePage(event, 0);\n    };\n\n    handleBackButtonClick = event => {\n        this.props.onChangePage(event, this.props.page - 1);\n    };\n\n    handleNextButtonClick = event => {\n        this.props.onChangePage(event, this.props.page + 1);\n    };\n\n    handleLastPageButtonClick = event => {\n        this.props.onChangePage(\n            event,\n            Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n        );\n    };\n\n    render() {\n        const { classes, count, page, rowsPerPage, theme } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <IconButton\n                    onClick={this.handleFirstPageButtonClick}\n                    disabled={page === 0}\n                    aria-label=\"First Page\"\n                >\n                    {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleBackButtonClick}\n                    disabled={page === 0}\n                    aria-label=\"Previous Page\"\n                >\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleNextButtonClick}\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                    aria-label=\"Next Page\"\n                >\n                    {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                </IconButton>\n                <IconButton\n                    onClick={this.handleLastPageButtonClick}\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                    aria-label=\"Last Page\"\n                >\n                    {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nTablePaginationActions.propTypes = {\n    classes: PropTypes.object.isRequired,\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n\nconst TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n    TablePaginationActions,\n);\n\n// let counter = 0;\nfunction createData(id, date_of_publication, headline, url) {\n    //     // counter += 1;\n    return { id, date_of_publication, headline, url };\n}\n\nconst styles = theme => ({\n    root: {\n        // width: '50%',\n        marginTop: theme.spacing.unit * 3,\n    },\n    table: {\n        // width: '50%'\n    },\n    tableWrapper: {\n        // overflowX: 'auto',\n    },\n});\n\nclass DisplayTable extends React.Component {\n    state = {\n        rows: [\n            createData(123, \"2011-11-11\", \"example news\", \"http://www.epiwatchnull.me/\"),\n            createData(134, \"2011-11-11\", \"example news\", \"http://www.epiwatchnull.me/\"),\n            // createData('Honeycomb', 408, 3.2),\n            // createData('Ice cream sandwich', 237, 9.0),\n            // createData('Jelly Bean', 375, 0.0),\n            // createData('KitKat', 518, 26.0),\n            // createData('Lollipop', 392, 0.2),\n            // createData('Marshmallow', 318, 0),\n            // createData('Nougat', 360, 19.0),\n            // createData('Oreo', 437, 18.0),\n        ],\n        page: 0,\n        rowsPerPage: 5,\n    };\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ page: 0, rowsPerPage: event.target.value });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { rowsPerPage, page } = this.state;\n        let rows = this.props.rows\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n        return (\n            <Paper className={classes.root}>\n                <div className={classes.tableWrapper}>\n                    <Table className={classes.table}>\n                        <TableBody>\n                            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                                <TableRow key={row.url}>\n                                    <TableCell>\n                                        {this.props.dataSource === \"Google\" ? <GoogleNewsCard report={row} /> : <EventCard report={row} />}\n                                        {/* <EventCard report={row} /> */}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 48 * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                        <TableFooter>\n                            <TableRow>\n                                <TablePagination\n                                    rowsPerPageOptions={[5, 10, 25]}\n                                    colSpan={5}\n                                    count={rows.length}\n                                    rowsPerPage={rowsPerPage}\n                                    page={page}\n                                    SelectProps={{\n                                        native: true,\n                                    }}\n                                    onChangePage={this.handleChangePage}\n                                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                                    ActionsComponent={TablePaginationActionsWrapped}\n                                />\n                            </TableRow>\n                        </TableFooter>\n                    </Table>\n                </div>\n            </Paper>\n        );\n    }\n}\n\nDisplayTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DisplayTable);\n","import React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Card from '@material-ui/core/Card';\nimport 'chartjs-plugin-datalabels';\n\nclass Chart extends Component {\n\n\trender() {\n\t\tconst articles = this.props.data\n\t\tlet types = new Map()\n\t\tfor (let article of articles) {\n\t\t\tfor (let report of article.reports) {\n\t\t\t\t// for all reports in articles\n\t\t\t\tfor (let event of report.reported_events) {\n\t\t\t\t\ttypes.set(event.type, event.number_affected)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlet keys = [...types.keys()];\n\t\tlet values = [...types.values()];\n\n\t\tconst datas = {\n\t\t\tlabels: keys,\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Number of People',\n\t\t\t\t\tdata: values,\n\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t'rgba(255,99,132,0.6)',\n\t\t\t\t\t\t'rgba(54,162,235,0.6)',\n\t\t\t\t\t\t'rgba(0,0,0,0.6)',\n\t\t\t\t\t\t'rgba(162,54,222,0.6)',\n\t\t\t\t\t\t'rgba(110,255,104,0.6)',\n\t\t\t\t\t\t'rgba(15,22,14,0.6)',\n\t\t\t\t\t\t'rgba(32,233,233,0.6)',\n\t\t\t\t\t\t'rgba(233,233,233,0.6)',\n\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t\treturn (\n\t\t\t< Card >\n\t\t\t\t<Bar\n\t\t\t\t\tdata={datas}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\ttext: 'Number of effected people for each type among all reports ',\n\t\t\t\t\t\t\tfontSixe: 25\n\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlegend: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\tposition: \"right\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tplugins: {\n\t\t\t\t\t\t\tdatalabels: {\n\t\t\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\t\t\tdisplay: function (context) {\n\t\t\t\t\t\t\t\t\treturn context.dataset.data[context.dataIndex] > 15;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\t\t\tweight: 'bold'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tformatter: Math.round\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscales: {\n\t\t\t\t\t\t\txAxes: [{\n\t\t\t\t\t\t\t\tstacked: true\n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\tyAxes: [{\n\t\t\t\t\t\t\t\tstacked: true\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\n\t\t\t\t/>\n\t\t\t</Card >\n\t\t\t// <GeneralChart data={datas} property=\"Disease Type\" ></GeneralChart>\n\n\t\t)\n\t}\n}\n\nexport default Chart;\n","import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport { InfoWindow, Marker } from 'google-maps-react';\nimport Geocode from \"react-geocode\";\nimport { Card } from '@material-ui/core';\nconst mapStyles = {\n    width: '100%',\n    height: '100%'\n};\n// set Google Maps Geocoding API for purposes of quota management. Its optional but recommended.\nGeocode.setApiKey(\"AIzaSyD1JZqf-_X3cJkzgVDA0EeYG8b4sg2A-zU\");\n\n// Enable or disable logs. Its optional.\nGeocode.enableDebug();\n\nexport class MapContainer extends Component {\n    state = {\n        showingInfoWindow: false,  //Hides or the shows the infoWindow\n        activeMarker: {},          //Shows the active marker upon click\n        selectedPlace: {},          //Shows the infoWindow to the selected place upon a marker\n        locations: {}\n    };\n\n    componentDidMount() {\n        let data = this.props.data;\n        let locob = {};\n        for (const article of data) {\n            for (const report of article.reports) {\n                for (const event of report.reported_events) {\n                    for (const event_loc of event.location) {\n                        let type_object = {};\n                        type_object[event.type] = event.number_affected;\n                        let input_locations_arr = event_loc.location.concat(event_loc.country);\n                        for (const location of input_locations_arr) {\n                            if (location in locob && event.type in locob[location]) {\n                                locob[location][event.type] += event.number_affected;\n                            }\n                            else {\n                                locob[location] = Object.assign({}, type_object);\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n        let allpromises = [Promise.resolve(3)];\n        let loc_keys = Object.keys(locob);\n        for (const location of loc_keys) {\n\n            let result = JSON.parse(localStorage.getItem(location));\n            if (result !== null) {\n                console.log(location)\n                locob[location][\"postion\"] = Object.assign({}, result);\n            }\n            else {\n                let setcomplete_promise = Geocode.fromAddress(location).then(\n                    response => {\n                        const { lat, lng } = response.results[0].geometry.location;\n                        locob[location][\"postion\"] = Object.assign({}, { lat, lng });\n                        localStorage.setItem(location, JSON.stringify({ lat, lng }));\n                        // this.setState({\n                        //     locations: locs\n                        // })\n                    },\n                    error => {\n                        console.error(error);\n                    }\n                );\n                allpromises.push(setcomplete_promise);\n            }\n        }\n        Promise.all(allpromises).then(() => {\n            this.setState({\n                locations: locob\n            })\n        });\n\n\n\n    }\n\n    onMarkerClick = (props, marker, e) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    };\n    addMarker = locations => {\n        let result = [];\n        const keys = Object.keys(locations)\n        for (const loc of keys) {\n            result.push(\n                <Marker\n                    onClick={this.onMarkerClick}\n                    name={loc}\n                    position={locations[loc][\"postion\"]}\n                    death={locations[loc]['death']}\n                    infected={locations[loc]['infected']}\n                    hospitalised={locations[loc]['hospitalised']}\n                    recovered={locations[loc]['recovered']}\n                    key={loc}\n                />\n            )\n        }\n\n        return result\n    }\n    render() {\n        // let locations = this.state.locations;\n        let markers = [];\n\n        markers = this.addMarker(this.state.locations);\n        if (markers.length === 0) {\n            return null;\n        }\n        console.log(markers);\n        return (\n            <Card>\n                <Map\n                    google={this.props.google}\n                    zoom={3}\n                    style={mapStyles}\n                >\n                    {markers}\n                    <InfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}\n                        onClose={this.onClose}\n                    >\n                        <div>\n                            <h2>{this.state.selectedPlace.name}</h2>\n                            <h4>death: {this.state.selectedPlace.death}</h4>\n                            <h4>infected: {this.state.selectedPlace.infected}</h4>\n                            <h4>hospitalised: {this.state.selectedPlace.hospitalised}</h4>\n                            <h4>recovered: {this.state.selectedPlace.recovered}</h4>\n                        </div>\n                    </InfoWindow>\n                </Map>\n            </Card>\n\n        );\n\n    }\n}\n\nconst LoadingContainer = (props) => (\n    <div>Fancy loading container!</div>\n)\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyD1JZqf-_X3cJkzgVDA0EeYG8b4sg2A-zU',\n    LoadingContainer: LoadingContainer\n})(MapContainer);","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Card from '@material-ui/core/Card';\n\nclass ChartByDates extends Component {\n    toRGB = function (string) {\n        let hash = 0;\n        if (string.length === 0) return hash;\n        for (let i = 0; i < string.length; i++) {\n            hash = string.charCodeAt(i) + ((hash << 5) - hash);\n            hash = hash & hash;\n        }\n        let rgb = [0, 0, 0];\n        for (let i = 0; i < 3; i++) {\n            let value = (hash >> (i * 8)) & 255;\n            rgb[i] = value;\n        }\n        return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n    }\n\n    render() {\n        const articles = this.props.data\n        // let datetimeRe = /([\\dx]{4})-([\\dx]{2})-([\\dx]{2})T([\\dx]{2}):([\\dx]{2}):([\\dx]{2})/;\n        let dates = []\n        let types = {}\n        for (const article of articles) {\n            let dateTime = article.date_of_publication\n            // console.log(dateTime)\n            dates.push(dateTime)\n            for (const report of article.reports) {\n                // for all reports in articles\n\n                for (const event of report.reported_events) {\n                    if (!types[event.type]) {\n                        types[event.type] = new Map()\n                    }\n                    types[event.type].set(dateTime, event.number_affected)\n                    // dates.set(article.date_of_publication, event.numer_affected)\n                }\n            }\n        }\n        let labels = dates; // label by dates\n        let dataset = []\n        // let colors = []\n        // let colors = dates.map(date => this.toRGB(date))\n        for (const type in types) {\n            if (types.hasOwnProperty(type)) {\n                dataset.push({\n                    label: type,\n                    data: [...types[type].values()],\n                    borderColor: dates.map(() => this.toRGB(type)),\n                    backgroundColor: dates.map(() => this.toRGB(type)),\n                });\n            }\n        }\n        //   backgroundColor: [\n        //     'rgba(255,99,132,0.6)',\n        //     'rgba(54,162,235,0.6)',\n        //     'rgba(0,0,0,0.6)',\n        //     'rgba(162,54,222,0.6)',\n        //     'rgba(110,255,104,0.6)',\n        //     'rgba(15,22,14,0.6)',\n        //     'rgba(32,233,233,0.6)',\n        //     'rgba(233,233,233,0.6)',\n\n        // ]\n        const datas = {\n            labels: labels,\n            datasets: dataset,\n\n        }\n\n        // Chart.helpers.merge(Chart.defaults.global, {\n        //     aspectRatio: 4 / 3,\n        //     tooltips: false,\n        //     layout: {\n        //         padding: {\n        //             top: 42,\n        //             right: 16,\n        //             bottom: 32,\n        //             left: 8\n        //         }\n        //     },\n        //     elements: {\n        //         line: {\n        //             fill: false\n        //         }\n        //     },\n        //     plugins: {\n        //         legend: false,\n        //         title: false\n        //     }\n        // });\n        return (\n\n            < Card >\n                <Line\n                    data={datas}\n                    options={{\n                        elements: {\n                            line: {\n                                fill: false\n                            }\n                        },\n                        title: {\n                            display: true,\n                            text: 'Number of effected people for each type among all reports in each period of time',\n                            fontSixe: 25\n\n                        },\n                        legend: {\n                            display: true,\n                            position: \"right\"\n                        },\n                        plugins: {\n                            datalabels: {\n                                display: false\n                            }\n                        },\n                        scales: {\n                            yAxes: [{\n                                stacked: true\n                            }]\n                        }\n\n                    }}\n\n                />\n            </Card >\n\n        )\n    }\n}\n\nexport default ChartByDates;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nconst styles1 = theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing.unit,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={classNames(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nconst styles2 = theme => ({\n    margin: {\n        margin: theme.spacing.unit,\n    },\n});\n\nclass CustomizedSnackbars extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    // handleClick = () => {\n    //     this.setState({ open: true });\n    // };\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        this.props.clearErrMsg();\n    };\n\n    render() {\n        // console.log(open);\n        // console.log(msg);\n        return (\n            <div>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.props.open}\n                    autoHideDuration={6000}\n                    onClose={this.handleClose}\n                >\n                    <MySnackbarContentWrapper\n                        onClose={this.handleClose}\n                        variant=\"error\"\n                        message={this.props.message}\n                    />\n                </Snackbar>\n            </div>\n        );\n    }\n}\n\nCustomizedSnackbars.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles2)(CustomizedSnackbars);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`,\n            },\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`,\n            },\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`,\n            },\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`,\n            },\n        },\n    };\n}\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    lightTooltip: {\n        backgroundColor: theme.palette.common.white,\n        color: 'rgba(0, 0, 0, 0.87)',\n        boxShadow: theme.shadows[1],\n        fontSize: 20,\n    },\n    lightPop: arrowGenerator(theme.palette.common.white),\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid',\n        },\n    },\n    bootstrapPopper: arrowGenerator(theme.palette.common.black),\n    bootstrapTooltip: {\n        backgroundColor: theme.palette.common.white,\n    },\n    bootstrapPlacementLeft: {\n        margin: '0 20px 0 0',\n    },\n    bootstrapPlacementRight: {\n        margin: '0 0 0 20px',\n    },\n    bootstrapPlacementTop: {\n        margin: '8px 0',\n    },\n    bootstrapPlacementBottom: {\n        margin: '8px 0',\n    },\n    htmlPopper: arrowGenerator('#dadde9'),\n    htmlTooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(12),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n});\n\nclass TipPopper extends React.Component {\n    state = {\n        arrowRef: null,\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node,\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n\n                <Tooltip\n                    title={\n                        <React.Fragment>\n                            {this.props.content}\n                            <span className={classes.arrow} ref={this.handleArrowRef} />\n                        </React.Fragment>\n                    }\n                    classes={{\n                        tooltip: classes.lightTooltip,\n                        popper: classes.lightPop,\n                        tooltipPlacementLeft: classes.bootstrapPlacementLeft,\n                        tooltipPlacementRight: classes.bootstrapPlacementRight,\n                        tooltipPlacementTop: classes.bootstrapPlacementTop,\n                        tooltipPlacementBottom: classes.bootstrapPlacementBottom,\n                    }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(this.state.arrowRef),\n                                    element: this.state.arrowRef,\n                                },\n                            },\n                        },\n                    }}\n                    open={this.props.open}\n                    placement={this.props.placement}\n                >\n                    {this.props.children}\n                </Tooltip>\n            </div >\n        );\n    }\n}\n\nTipPopper.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TipPopper);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n};\n\nfunction LinearIndeterminate(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.root}>\n            <LinearProgress disableShrink />\n        </div>\n    );\n}\n\nLinearIndeterminate.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LinearIndeterminate);","import React, { Component } from 'react';\nimport './App.css';\nimport DisplayTable from './dataDisplay/DataDisplay'\nimport Chart from './charts/Chart'\nimport DataMap from './map/DataMap'\nimport ChartByDates from './charts/ChartByDates'\nimport ErrSnack from './others/errSnack'\nimport TipPopper from './others/TipPopper'\nimport LinearIndeterminate from './others/processer'\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport SplitterLayout from 'react-splitter-layout';\nimport 'react-splitter-layout/lib/index.css';\nimport ScrollUpButton from \"react-scroll-up-button\";\n\nimport moment from 'moment';\n\n\nfunction TabContainer(props) {\n    return (\n        <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n            {props.children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n};\nconst styles = theme => ({\n\n    bar: {\n        backgroundColor: '#282c34',\n    },\n    dataBlock: {\n        display: 'inline-block',\n        // backgroundColor: '#282c34',\n        flexGrow: 1,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 350,\n        height: 60\n\n        // color: 'white'\n        //primary: purple,\n        //color: '#FAFEFE',\n    },\n    input: {\n        color: '#FFFFFF'\n    },\n\n    cssLabel: {\n        '&$cssFocused': {\n            color: \"white\"\n        },\n    },\n    cssOutlinedInput: {\n        '&$cssFocused $notchedOutline': {\n            borderColor: \"white\"\n        },\n    },\n    cssFocused: {},\n    notchedOutline: { borderColor: \"white !important\" },\n    floatingLabelFocusStyle: {\n        color: \"white !important\"\n    },\n    multilineColor: {\n        color: 'white'\n    },\n\n\n});\n\n\nclass MainPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            getData: false,\n            getGoogleNews: false,\n            articles: [],\n            value: 0,\n            keyBox: 1,\n            errorMsg: \"\",\n            loading: false,\n            helperMode: false\n        }\n\n        this.searchInEpiWatch = this.searchInEpiWatch.bind(this);\n        this.searchOnGoogleNews = this.searchOnGoogleNews.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        // this.handleChangeKey = this.handleChangeKey.bind(this);\n        // this.handleChangeStart = this.handleChangeStart.bind(this);\n        // this.handleChangeEnd = this.handleChangeEnd.bind(this);\n        this.scrollToMyRef = this.scrollToMyRef.bind(this);\n        this.AddKeyterm = this.AddKeyterm.bind(this);\n        this.clearErrMsg = this.clearErrMsg.bind(this);\n        this.refToData = React.createRef() // for auto scroll to tables after search\n        this.onKeyPress = this.onKeyPress.bind(this);\n\n    }\n\n    togglehelper = () => {\n        this.setState({ helperMode: !this.state.helperMode })\n    }\n\n    clearErrMsg = () => { this.setState({ errorMsg: \"\" }) }\n\n    scrollToMyRef = () => window.scrollTo(0, this.refToData.current.offsetTop)\n\n    handleChange = (event, value) => {\n        this.setState({ articles: [], getData: false, getGoogleNews: false, value: value });\n    };\n\n    // handleChangeLocation = location => event => {\n    //     this.setState({ [location]: event.target.value });\n    // };\n    // handleChangeKey = key => event => {\n    //     this.setState({ [key]: event.target.value });\n    // };\n    // handleChangeStart = start => event => {\n    //     this.setState({ [start]: event.target.value });\n    // };\n    // handleChangeEnd = end => event => {\n    //     this.setState({ [end]: event.target.value });\n    // };\n\n    searchInEpiWatch(event) {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n            return;\n        }\n        this.setState({\n            getData: false,\n            getGoogleNews: false,\n            articles: [],\n            googleNews: [],\n            loading: true\n        })\n\n        var location = document.getElementById(\"location\").value;\n        var key_term = document.getElementById(\"key_term\").value;\n        var start_date = document.getElementById(\"start_date\").value;\n        var end_date = document.getElementById(\"end_date\").value;\n        let start_moment = moment(start_date, \"YYYY-MM-DD\");\n        let end_moment = moment(end_date, \"YYYY-MM-DD\");\n        if (!start_moment.isValid() || !end_moment.isValid()) {\n            this.setState({\n                errorMsg: \"Correct date format is YYYY-MM-DD, e.g. 2019-03-30\",\n                loading: false\n            })\n            event.preventDefault()\n            return;\n        }\n        if (end_moment.isSameOrBefore(start_moment)) {\n            this.setState({\n                errorMsg: \"The start Date must be ealier than end\",\n                loading: false\n            })\n            event.preventDefault()\n            return;\n        }\n\n        let url;\n        for (var i = 1; i < this.state.keyBox; i++) {\n            key_term = key_term + \",\" + document.getElementById(\"key\" + i).innerText;\n        }\n\n        if (start_date === \"\" || end_date === \"\") {\n            this.setState({\n                errorMsg: \"Date format is invaild\",\n                loading: false\n            })\n            event.preventDefault()\n            return;\n        }\n\n        if (location === \"\") {\n            url = 'http://www.epiwatchnull.me/api/articles/?end_date='\n                + end_date +\n                'T11%3A11%3A11&format=json&keyterms='\n                + key_term +\n                '&start_date='\n                + start_date +\n                'T11%3A11%3A11&';\n        } else {\n            location = 'location=' + location\n            url = 'http://www.epiwatchnull.me/api/articles/?end_date='\n                + end_date +\n                'T11%3A11%3A11&format=json&keyterms='\n                + key_term +\n                '&start_date='\n                + start_date +\n                'T11%3A11%3A11&'\n                + location;\n        }\n        var req = new Request(url);\n        fetch(req)\n            .then(response => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then((json) => {\n                this.setState({\n                    getData: true,\n                    articles: json,\n                    loading: false\n                })\n                this.scrollToMyRef()\n            })\n            .catch(err => {\n                this.setState({\n                    errorMsg: err.message,\n                    loading: false\n                })\n            });\n        // window.alert('done');\n        event.preventDefault()\n    }\n\n    searchOnGoogleNews(event) {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n            return;\n        }\n        this.setState({\n            getData: false,\n            getGoogleNews: false,\n            googleNews: [],\n            loading: true\n        })\n        // var location = document.getElementById(\"location\").value;\n        var key_term = document.getElementById(\"key_term\").value;\n        var start_date = document.getElementById(\"start_date\").value;\n        var end_date = document.getElementById(\"end_date\").value;\n        var query = key_term;\n\n\n        //window.alert(query);\n        if (start_date === \"\" || end_date === \"\" || key_term === \"\") {\n            this.setState({\n                errorMsg: \"please enter start date, end date and key terms\",\n                loading: false\n            })\n            event.preventDefault()\n            return;\n        }\n\n        let start_moment = moment(start_date, \"YYYY-MM-DD\");\n        let end_moment = moment(end_date, \"YYYY-MM-DD\");\n        if (!start_moment.isValid() || !end_moment.isValid()) {\n            this.setState({\n                errorMsg: \"Correct date format is YYYY-MM-DD, e.g. 2019-03-30\",\n                loading: false\n            })\n            event.preventDefault()\n            return;\n        }\n        if (end_moment.isSameOrBefore(start_moment)) {\n            this.setState({\n                errorMsg: \"The start Date must be ealier than end\",\n                loading: false\n            })\n            event.preventDefault()\n            return;\n        }\n        if (start_moment.isSameOrBefore(moment().subtract(1, 'months'))) {\n            this.setState({\n                errorMsg: \"Sorry, Google API does not provide news a month ago\",\n                loading: false\n            })\n            event.preventDefault()\n            return;\n        }\n        let url = 'https://newsapi.org/v2/everything?' +\n            'q=' +\n            query +\n            '&' +\n            'from=' +\n            start_date +\n            '&' +\n            'to=' +\n            end_date +\n            '&' +\n            'sortBy=popularity&' +\n            'apiKey=8b0a925ba645489383897ddb8c0a67b5';\n        var req = new Request(url);\n        fetch(req)\n            .then(function (response) {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then((json) => {\n                this.setState({\n                    getGoogleNews: true,\n                    googleNews: json,\n                    loading: false\n                })\n                this.scrollToMyRef()\n            })\n            .catch(err => {\n                console.log(err.message);\n                this.setState({\n                    errorMsg: err.message,\n                    loading: false\n                })\n            });\n        event.preventDefault()\n        return;\n    }\n\n\n    onKeyPress(event) {\n        if (event.which === 13 /* Enter */) {\n            event.preventDefault();\n        }\n    }\n\n    AddKeyterm(event) {\n        if (event.keyCode === 13) {\n            this.setState({ keyBox: this.state.keyBox + 1 });\n\n            let keyBox = this.state.keyBox;\n            //Create an input type dynamically.\n\n            //Add Tag\n            var tag = document.createElement(\"div\");\n            var key_term = document.getElementById(\"key_term\").value;\n            tag.innerHTML = key_term;\n            //element.setAttribute(\"class\", \"Search-form\");\n            tag.setAttribute(\"placeholder\", \"Key_term\");\n            tag.setAttribute(\"class\", \"keyterm_tag\");\n            tag.setAttribute(\"name\", \"Location\" + keyBox.toString());\n            tag.setAttribute(\"id\", \"key\" + keyBox.toString());\n\n\n            var foo = document.getElementById(\"fooBar\");\n\n            //foo.appendChild(element);\n            foo.appendChild(tag);\n\n            document.getElementById(\"key_term\").value = \"\";\n        }\n        return false;\n    }\n\n    Reset(event) {\n\n        window.location.reload();\n        return false;\n    }\n\n\n    render() {\n\n\n        let articles = this.state.articles\n        for (let article of articles) {\n            let dateTime = moment(article.date_of_publication.split(\"T\")[0])\n            article.date_of_publication = dateTime\n        }\n        articles.sort((a, b) => a.date_of_publication - b.date_of_publication)  // sort by dates\n        articles.map(article => article.date_of_publication = article.date_of_publication.format(\"YYYY-MM-DD\"))\n        const { classes } = this.props;\n        const { value } = this.state;\n        return (\n            <div className=\"App\">\n                {this.state.loading ? <LinearIndeterminate ></LinearIndeterminate> : null}\n\n                <header className=\"App-header\">\n\n\n                    <TipPopper\n                        content=\"Here is our sincerest Welcome\" open={this.state.helperMode} placement=\"top\" >\n                        <p >\n                            WelCome to Disease Watch\n                    </p>\n                    </TipPopper>\n                    <TipPopper content=\"Choose for searching among our WHO articles or google news  \" open={this.state.helperMode} placement=\"right\" >\n                        <div className={classes.bar}>\n                            <AppBar position=\"static\" className={classes.bar}>\n                                <Tabs value={value} onChange={this.handleChange}>\n                                    <Tab label=\"Epi Watch\" />\n\n\n                                    <Tab label=\"Google News\" />\n                                </Tabs>\n                            </AppBar>\n                        </div>\n                    </TipPopper>\n                    {value === 0 && <TabContainer>\n\n                        <form onSubmit={this.searchInEpiWatch} onKeyPress={this.onKeyPress} className=\"Search-form\">\n                            <span id=\"fooBar\">&nbsp;</span>\n                            <TipPopper\n                                content=\"with this field, it will search for reports that include at least one key terms. Press 'Enter' each time enterred a keyterm \" open={this.state.helperMode} placement=\"left\" >\n                                <TextField\n                                    id=\"key_term\"\n                                    label=\"Key Term\"\n                                    InputLabelProps={{\n                                        className: classes.floatingLabelFocusStyle,\n                                        classes: {\n                                            root: classes.cssLabel,\n                                            focused: classes.cssFocused,\n                                        },\n                                    }}\n                                    InputProps={{\n                                        classes: {\n                                            root: classes.cssOutlinedInput,\n                                            focused: classes.cssFocused,\n                                            notchedOutline: classes.notchedOutline,\n                                            input: classes.multilineColor,\n                                        },\n                                    }}\n                                    className={classes.textField}\n                                    onKeyDown={this.AddKeyterm}\n                                    placeholder=\"e.g. cholera\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                // helperText=\"show\"\n                                // error={true}\n                                />\n                            </TipPopper>\n                            <TipPopper\n                                content=\"with this field, it will search for reports related to this location\" open={this.state.helperMode} placement=\"right\" >\n                                <TextField\n                                    id=\"location\"\n                                    label=\"Location\"\n                                    InputLabelProps={{\n                                        className: classes.floatingLabelFocusStyle,\n                                        classes: {\n                                            root: classes.cssLabel,\n                                            focused: classes.cssFocused,\n                                        },\n                                    }}\n                                    InputProps={{\n                                        classes: {\n                                            root: classes.cssOutlinedInput,\n                                            focused: classes.cssFocused,\n                                            notchedOutline: classes.notchedOutline,\n                                            input: classes.multilineColor,\n                                        },\n                                    }}\n                                    className={classes.textField}\n                                    placeholder=\"e.g. Uganda\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n\n                                />\n                            </TipPopper>\n                            <TipPopper\n                                content=\"this field is required, it specifies the earliest date of reports\" open={this.state.helperMode} placement=\"left\" >\n                                <TextField\n                                    id=\"start_date\"\n                                    label=\"Start Date\"\n                                    InputLabelProps={{\n                                        className: classes.floatingLabelFocusStyle,\n                                        classes: {\n                                            root: classes.cssLabel,\n                                            focused: classes.cssFocused,\n                                        },\n                                    }}\n                                    InputProps={{\n                                        classes: {\n                                            root: classes.cssOutlinedInput,\n                                            focused: classes.cssFocused,\n                                            notchedOutline: classes.notchedOutline,\n                                            input: classes.multilineColor,\n                                        },\n                                    }}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    placeholder=\"e.g. 2012-03-30\"\n                                    helperText=\"*required\"\n                                    error={true}\n                                />\n                            </TipPopper>\n                            <TipPopper\n                                content=\"this field is required, it specifies the lastest date of reports\" open={this.state.helperMode} placement=\"right\" >\n                                <TextField\n                                    id=\"end_date\"\n                                    label=\"End Date\"\n                                    InputLabelProps={{\n                                        className: classes.floatingLabelFocusStyle,\n                                        classes: {\n                                            root: classes.cssLabel,\n                                            focused: classes.cssFocused,\n                                        },\n                                    }}\n                                    InputProps={{\n                                        classes: {\n                                            root: classes.cssOutlinedInput,\n                                            focused: classes.cssFocused,\n                                            notchedOutline: classes.notchedOutline,\n                                            input: classes.multilineColor,\n                                        },\n                                    }}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    placeholder=\"e.g. 2019-05-30\"\n                                    helperText=\"*required\"\n                                    error={true}\n                                />\n                            </TipPopper>\n\n                            <input type=\"submit\" value=\"Search in Epi Watch\" className=\"submit-button\" />\n                        </form>\n                        <TipPopper\n                            content=\"Reset button can clear all your inputs at once\" open={this.state.helperMode} placement=\"left\" >\n                            <button onClick={this.Reset} className=\"reset-button\">\n                                Clear Inputs\n                        </button>\n                        </TipPopper>\n                        <button onClick={this.togglehelper} className=\"reset-button\" >\n                            How to use ?\n                        </button>\n\n\n                    </TabContainer>}\n                    {value === 1 && <TabContainer>\n                        <form onSubmit={this.searchOnGoogleNews} onKeyPress={this.onKeyPress} className=\"Search-form\">\n                            {/* <input type=\"text\" name=\"location\" id=\"location\" className=\"Search-form\"\n                                placeholder=\"Location\" /> */}\n                            *all fields are required\n                            <TipPopper\n                                content=\"Exactly one key term required\" open={this.state.helperMode} placement=\"left\" >\n                                <TextField\n                                    id=\"key_term\"\n                                    label=\"Key Term\"\n                                    InputLabelProps={{\n                                        className: classes.floatingLabelFocusStyle,\n                                        classes: {\n                                            root: classes.cssLabel,\n                                            focused: classes.cssFocused,\n                                        },\n                                    }}\n                                    InputProps={{\n                                        classes: {\n                                            root: classes.cssOutlinedInput,\n                                            focused: classes.cssFocused,\n                                            notchedOutline: classes.notchedOutline,\n                                            input: classes.multilineColor,\n                                        },\n                                    }}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    placeholder=\"e.g. cholera\"\n                                    helperText=\"*required\"\n                                    error={true}\n                                />\n                            </TipPopper>\n                            <TipPopper content=\"this field is required, it specifies the earliest date of reports\" open={this.state.helperMode} placement=\"right\" >\n                                <TextField\n                                    id=\"start_date\"\n                                    label=\"Start Date\"\n                                    InputLabelProps={{\n                                        className: classes.floatingLabelFocusStyle,\n                                        classes: {\n                                            root: classes.cssLabel,\n                                            focused: classes.cssFocused,\n                                        },\n                                    }}\n                                    InputProps={{\n                                        classes: {\n                                            root: classes.cssOutlinedInput,\n                                            focused: classes.cssFocused,\n                                            notchedOutline: classes.notchedOutline,\n                                            input: classes.multilineColor,\n                                        },\n                                    }}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    placeholder=\"e.g. 2019-03-30\"\n                                    helperText=\"*required\"\n                                    error={true}\n                                />\n                            </TipPopper>\n                            <TipPopper content=\"this field is required, it specifies the lastest date of reports\" open={this.state.helperMode} placement=\"left\" >\n                                <TextField\n                                    id=\"end_date\"\n                                    label=\"End Date\"\n                                    InputLabelProps={{\n                                        className: classes.floatingLabelFocusStyle,\n                                        classes: {\n                                            root: classes.cssLabel,\n                                            focused: classes.cssFocused,\n                                        },\n                                    }}\n                                    InputProps={{\n                                        classes: {\n                                            root: classes.cssOutlinedInput,\n                                            focused: classes.cssFocused,\n                                            notchedOutline: classes.notchedOutline,\n                                            input: classes.multilineColor,\n                                        },\n                                    }}\n                                    className={classes.textField}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    placeholder=\"e.g. 2019-04-30\"\n                                    helperText=\"*required\"\n                                    error={true}\n                                />\n                            </TipPopper>\n                            <input type=\"submit\" value=\"Search in Google News\" className=\"submit-button\" />\n                        </form>\n                        <button onClick={this.togglehelper} className=\"reset-button\" >\n                            How to use ?\n                        </button>\n                    </TabContainer>}\n\n\n                </header>\n                <div ref={this.refToData} >\n                    {this.state.getData ? <SplitterLayout percentage>\n                        <div >\n                            <Chart data={articles} />\n                            <ChartByDates data={articles} />\n                            <DataMap data={articles} />\n                        </div>\n                        <div>\n                            <DisplayTable rows={articles} dataSource=\"WHO\" />\n                        </div>\n                    </SplitterLayout>\n                        : null\n                    }\n                    {this.state.getGoogleNews ? <DisplayTable rows={this.state.googleNews.articles} dataSource=\"Google\" /> : null}\n\n                </div>\n                <div>\n\n                    <ScrollUpButton\n                        ContainerClassName=\"scroll-up\"\n                        TransitionClassName=\"scroll-up-transition\"\n                    >\n                    </ScrollUpButton>\n                </div>\n                <ErrSnack message={this.state.errorMsg} open={this.state.errorMsg === \"\" ? false : true} clearErrMsg={this.clearErrMsg} > </ErrSnack>\n            </div >\n\n        );\n    }\n}\n\n\nMainPage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MainPage);\n","import React, { Component } from 'react';\nimport MainPage from './MainPage';\nimport './App.css';\n// import { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n\nclass App extends Component {\n    render() {\n\n        return (\n            <MainPage></MainPage>\n        );\n    }\n\n\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Router, Route, hashHistory, IndexRoute } from 'react-router';\nimport App from './App';\nimport MainPage from './MainPage';\nimport Map from './map/DataMap.js';\n\nclass Routers extends Component {\n    render() {\n        return (\n            <Router history={hashHistory}>\n                <Route path=\"/\" component={App}>\n                    <IndexRoute component={MainPage} />\n                    {/*<Route path=\"MainPage\" component={MainPage}/>*/}\n                </Route>\n                <Route path=\"MainPage\" component={MainPage} />\n                <Route path=\"Maptest\" component={Map} />\n            </Router>\n        )\n    }\n}\n\nexport default Routers;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routers from './router';\n\nimport * as serviceWorker from './serviceWorker';\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Routers />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n"],"sourceRoot":""}